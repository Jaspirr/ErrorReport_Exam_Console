// <auto-generated />
using System;
using ErrorReport_Exam_Console.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ErrorReport_Exam_Console.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ErrorReport_Exam_Console.Models.Entities.CommentEntity", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ErrorReportId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("ErrorReportId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ErrorReport_Exam_Console.Models.Entities.CustomerEntity", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("char(13)");

                    b.HasKey("CustomerId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ErrorReport_Exam_Console.Models.Entities.ErrorReportEntity", b =>
                {
                    b.Property<int>("ErrorReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorReportId"));

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ErrorReportStatus")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ErrorReportId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ErrorReports");
                });

            modelBuilder.Entity("ErrorReport_Exam_Console.Models.Entities.CommentEntity", b =>
                {
                    b.HasOne("ErrorReport_Exam_Console.Models.Entities.ErrorReportEntity", "ErrorReports")
                        .WithMany("Comments")
                        .HasForeignKey("ErrorReportId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ErrorReports");
                });

            modelBuilder.Entity("ErrorReport_Exam_Console.Models.Entities.ErrorReportEntity", b =>
                {
                    b.HasOne("ErrorReport_Exam_Console.Models.Entities.CustomerEntity", "Customer")
                        .WithMany("ErrorReports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ErrorReport_Exam_Console.Models.Entities.CustomerEntity", b =>
                {
                    b.Navigation("ErrorReports");
                });

            modelBuilder.Entity("ErrorReport_Exam_Console.Models.Entities.ErrorReportEntity", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
